name: Build, Publish Promxy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: asserts

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Restore Cache
      uses: actions/cache@preview
      id: cache
      with:
        path: ~/.cache/go-build/
        key: ${{ runner.os }}

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'

    - name: install
      run: |
        go install -v golang.org/x/tools/cmd/goimports@latest
        go install -v honnef.co/go/tools/cmd/staticcheck@latest

    - name: Test
      run: |
        make fmt && git diff --exit-code
        make imports && git diff --exit-code
        make static-check
        make test

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get repository name
      run: |
        REPO_NAME=${GITHUB_REPOSITORY#*/}
        echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV

    - name: Docker metadata
      id: meta-pr
      uses: docker/metadata-action@v4
      if: github.event_name == 'pull_request'
      with:
        images: ${{ env.REGISTRY}}/${{ env.REPO_NAME }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr

    - name: Docker metadata
      id: meta-merge
      uses: docker/metadata-action@v4
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      with:
        images: ${{ env.REGISTRY}}/${{ env.REPO_NAME }}
        tags: |
          type=schedule
          type=sha

    - name: Docker metadata
      id: meta-tag
      uses: docker/metadata-action@v4
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      with:
        images: ${{ env.REGISTRY}}/${{ env.REPO_NAME }}
        tags: |
          type=schedule
          type=ref,event=tag

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push pr
      uses: docker/build-push-action@v4
      if: github.event_name == 'pull_request'
      with:
        context: '.'
        push: true
        platforms:
          - linux/amd64
          - linux/arm64
        tags:  ${{ steps.meta-pr.outputs.tags }}

    - name: Build and push merge
      uses: docker/build-push-action@v4
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      with:
        context: '.'
        push: true
        platforms:
          - linux/amd64
          - linux/arm64
        tags:  ${{ steps.meta-merge.outputs.tags }}

    - name: Build and push tag
      uses: docker/build-push-action@v4
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      with:
        context: '.'
        push: true
        platforms:
          - linux/amd64
          - linux/arm64
        tags:  ${{ steps.meta-tag.outputs.tags }}